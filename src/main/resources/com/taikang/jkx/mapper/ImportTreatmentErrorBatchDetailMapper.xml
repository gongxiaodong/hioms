<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taikang.jkx.mapper.ImportTreatmentErrorBatchDetailMapper">
  <resultMap id="BaseResultMap" type="com.taikang.jkx.model.ImportTreatmentErrorBatchDetail">
    <id column="batch_number" jdbcType="VARCHAR" property="batchNumber" />
    <id column="treatment_number" jdbcType="VARCHAR" property="treatmentNumber" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="large_fee_old" jdbcType="REAL" property="largeFeeOld" />
    <result column="large_fee_new" jdbcType="REAL" property="largeFeeNew" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_number, treatment_number, id_card, description, large_fee_old, large_fee_new
  </sql>
  <select id="selectByExample" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from import_treatment_error_batch_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetailKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from import_treatment_error_batch_detail
    where batch_number = #{batchNumber,jdbcType=VARCHAR}
      and treatment_number = #{treatmentNumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetailKey">
    delete from import_treatment_error_batch_detail
    where batch_number = #{batchNumber,jdbcType=VARCHAR}
      and treatment_number = #{treatmentNumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetailExample">
    delete from import_treatment_error_batch_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetail">
    insert into import_treatment_error_batch_detail (batch_number, treatment_number, id_card, 
      description, large_fee_old, large_fee_new
      )
    values (#{batchNumber,jdbcType=VARCHAR}, #{treatmentNumber,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{largeFeeOld,jdbcType=REAL}, #{largeFeeNew,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetail">
    insert into import_treatment_error_batch_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batchNumber != null">
        batch_number,
      </if>
      <if test="treatmentNumber != null">
        treatment_number,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="largeFeeOld != null">
        large_fee_old,
      </if>
      <if test="largeFeeNew != null">
        large_fee_new,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batchNumber != null">
        #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="treatmentNumber != null">
        #{treatmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="largeFeeOld != null">
        #{largeFeeOld,jdbcType=REAL},
      </if>
      <if test="largeFeeNew != null">
        #{largeFeeNew,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetailExample" resultType="java.lang.Long">
    select count(*) from import_treatment_error_batch_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update import_treatment_error_batch_detail
    <set>
      <if test="record.batchNumber != null">
        batch_number = #{record.batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.treatmentNumber != null">
        treatment_number = #{record.treatmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.largeFeeOld != null">
        large_fee_old = #{record.largeFeeOld,jdbcType=REAL},
      </if>
      <if test="record.largeFeeNew != null">
        large_fee_new = #{record.largeFeeNew,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update import_treatment_error_batch_detail
    set batch_number = #{record.batchNumber,jdbcType=VARCHAR},
      treatment_number = #{record.treatmentNumber,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      large_fee_old = #{record.largeFeeOld,jdbcType=REAL},
      large_fee_new = #{record.largeFeeNew,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetail">
    update import_treatment_error_batch_detail
    <set>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="largeFeeOld != null">
        large_fee_old = #{largeFeeOld,jdbcType=REAL},
      </if>
      <if test="largeFeeNew != null">
        large_fee_new = #{largeFeeNew,jdbcType=REAL},
      </if>
    </set>
    where batch_number = #{batchNumber,jdbcType=VARCHAR}
      and treatment_number = #{treatmentNumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taikang.jkx.model.ImportTreatmentErrorBatchDetail">
    update import_treatment_error_batch_detail
    set id_card = #{idCard,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      large_fee_old = #{largeFeeOld,jdbcType=REAL},
      large_fee_new = #{largeFeeNew,jdbcType=REAL}
    where batch_number = #{batchNumber,jdbcType=VARCHAR}
      and treatment_number = #{treatmentNumber,jdbcType=VARCHAR}
  </update>
</mapper>