<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taikang.jkx.mapper.HiomsPatrolAttachmentMapper">
  <resultMap id="BaseResultMap" type="com.taikang.jkx.model.HiomsPatrolAttachment">
    <id column="attachment_id" jdbcType="VARCHAR" property="attachmentId" />
    <result column="patrol_id" jdbcType="VARCHAR" property="patrolId" />
    <result column="treatment_number" jdbcType="VARCHAR" property="treatmentNumber" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attachment_id, patrol_id, treatment_number, source, file_path, file_name, file_type, 
    valid
  </sql>
  <select id="selectByExample" parameterType="com.taikang.jkx.model.HiomsPatrolAttachmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hioms_patrol_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hioms_patrol_attachment
    where attachment_id = #{attachmentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from hioms_patrol_attachment
    where attachment_id = #{attachmentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.taikang.jkx.model.HiomsPatrolAttachmentExample">
    delete from hioms_patrol_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taikang.jkx.model.HiomsPatrolAttachment">
    insert into hioms_patrol_attachment (attachment_id, patrol_id, treatment_number, 
      source, file_path, file_name, 
      file_type, valid)
    values (#{attachmentId,jdbcType=VARCHAR}, #{patrolId,jdbcType=VARCHAR}, #{treatmentNumber,jdbcType=VARCHAR}, 
      #{source,jdbcType=INTEGER}, #{filePath,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=VARCHAR}, #{valid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taikang.jkx.model.HiomsPatrolAttachment">
    insert into hioms_patrol_attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        attachment_id,
      </if>
      <if test="patrolId != null">
        patrol_id,
      </if>
      <if test="treatmentNumber != null">
        treatment_number,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="valid != null">
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="patrolId != null">
        #{patrolId,jdbcType=VARCHAR},
      </if>
      <if test="treatmentNumber != null">
        #{treatmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taikang.jkx.model.HiomsPatrolAttachmentExample" resultType="java.lang.Long">
    select count(*) from hioms_patrol_attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hioms_patrol_attachment
    <set>
      <if test="record.attachmentId != null">
        attachment_id = #{record.attachmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.patrolId != null">
        patrol_id = #{record.patrolId,jdbcType=VARCHAR},
      </if>
      <if test="record.treatmentNumber != null">
        treatment_number = #{record.treatmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hioms_patrol_attachment
    set attachment_id = #{record.attachmentId,jdbcType=VARCHAR},
      patrol_id = #{record.patrolId,jdbcType=VARCHAR},
      treatment_number = #{record.treatmentNumber,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taikang.jkx.model.HiomsPatrolAttachment">
    update hioms_patrol_attachment
    <set>
      <if test="patrolId != null">
        patrol_id = #{patrolId,jdbcType=VARCHAR},
      </if>
      <if test="treatmentNumber != null">
        treatment_number = #{treatmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
    </set>
    where attachment_id = #{attachmentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taikang.jkx.model.HiomsPatrolAttachment">
    update hioms_patrol_attachment
    set patrol_id = #{patrolId,jdbcType=VARCHAR},
      treatment_number = #{treatmentNumber,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER}
    where attachment_id = #{attachmentId,jdbcType=VARCHAR}
  </update>
</mapper>